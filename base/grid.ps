#version 120

uniform vec4 color;
uniform vec2 grid_offset;
uniform vec2 grid_spacing;

void main(){
	/*
	// Simple version that works for sure
	vec2 mods = mod(gl_FragCoord.xy + grid_offset, grid_spacing);
	if (min(mods.x, mods.y) > 1)
		discard;
	gl_FragColor = color;
	*/
	
	// First build a periodic function. Scale cosine so that it has the same period as our grid cells.
	// The result is in the range [1, -1] with 1 at the center of our grid lines and -1 in the middle of nowhere.
	vec2 period = cos( (gl_FragCoord.xy + grid_offset) * (radians(360) / grid_spacing) );
	
	// Choose the more intensive part of the horizontal and vertical grid lines. Then select a upper
	// rante from the period function and user it for the alpha value.
	float intensity = smoothstep(0.98, 1, max(period.x, period.y));
	// Does the same. May be faster, don't know. But is definetly less readable.
	//float intensity = clamp(max(period.x, period.y) - 0.98, 0, 1) * 50;
	gl_FragColor = vec4(color.rgb, intensity);
}